-- CRIAÇÃO DO BANCO DE DADOS PARA O CENÁRIO DE E-COMMERCE
create database ecommerce;
use ecommerce;


create table clients(
	idClient int auto_increment primary key,
    Fname varchar(10),
    Minit char(3),
    Lname varchar(20),
    CPF char(11) not null,
    Adress varchar(30),
    constraint unique_cpf_client unique (CPF)
    

);
alter table clients auto_increment=1;

-- select * from product;
create table product(
	idProduct int auto_increment primary key,
    Pname varchar(10) not null,
    classification_kids bool default false,
    category enum('Eletrônico','Vestimenta','Brinquedos','Alimentos','Móveis'),
    avaliacao float default 0,
    size varchar(10)
);

-- PARA SER CONTINUADO NO DESAFIO: TERMINE DE IMPLEMENTAR A TABELA
-- E CRIE A CONEXÃO COM AS TABELAS NECESSÁRIAS
-- ALÉM DISSO, REFLITA ESSA MODIFICAÇÃO NO DIAGRAMA DO ESQUEMA RELACIONAL
     
                             
-- select * from payments;
create table payments(
	idClient int,
    idPayment int auto_increment,
    typePayment enum('Boleto','Cartão','Dois cartões'),
    limitAvailable float,
	  primary key(idClient, idPayment)

);

-- select * from orders;
create table orders(
	idOrders int auto_increment primary key,
    idOrdersClient int,
    orderStatus enum('Cancelado','Confirmado','Em processamento') default 'Em processamento',
    orderDescription varchar(255),
    sendValue float default 10,
    paymentCash bool default false,
    constraint fk_orders_client foreign key (idOrdersClient) references clients(idClient)
		on update cascade

);

create table productStorage(
	idProdStorage int auto_increment primary key,
    storageLocation varchar(255),
    quantity int default 0

);

-- select * from supplier;
create table supplier(
	idSupplier int auto_increment primary key,
    SocialName varchar(255) not null,
    CNPJ char(14) not null,
    contact char(11) not null,
    constraint unique_supplier unique (CNPJ)
);

-- select * from seller;

create table seller(
	idSeller int auto_increment primary key,
    SocialName varchar(255) not null,
    AbsName varchar(255),
    CNPJ char(14),
    CPF char(11),
    location varchar(255),
    contact char(11) not null,
    constraint unique_cnpj_seller unique (CNPJ),
    constraint unique_cpf_seller unique (CPF)
);


create table productSeller(
	idPseller int,
    idPproduct int,
    prodQuantity int default 1,
    primary key(idPseller, idPproduct),
    constraint fk_product_seller foreign key (idPseller) references seller(idSeller),
    constraint fk_product_product foreign key (idPproduct) references product(idProduct)
);

create table productOrder(
	idPOproduct int,
    idPOorder int,
    prodQuantity int default 1,
    poStatus enum('Disponível','Sem estoque') default 'Disponível',
    primary key(idPOproduct,idPOorder),
    constraint fk_productorder_seller foreign key (idPOproduct) references product(idProduct),
    constraint fk_productorder_product foreign key (idPOorder) references orders(idOrders)
);

create table storageLocation(
	idLproduct int,
    idLstorage int,
    location varchar(255) not null,
    primary key(idLproduct, idLstorage),
    constraint fk_storage_location_product foreign key (idLproduct) references product(idProduct),
    constraint fk_storage_location_storage foreign key (idLstorage) references productStorage(idProdStorage)
);

create table productSupplier(
	idPsSupplier int,
    idPsProduct int,
    quantity int not null,
    primary key (idPsSupplier, idPsProduct),
    constraint fk_product_supplier_supplier foreign key (idPsSupplier) references supplier(idSupplier),
    constraint fk_product_supplier_product foreign key (idPsProduct) references product(idProduct)

);


                               
create table delivery(
	idDelivery int not null auto_increment,
    idDOrders int,
    idDOrdersClient int,
    StatusDelivery ENUM('Pendente','Enviado','Entregue') default 'Pendente',
    CodigoRastreio char(13),
    quantity int not null,
    primary key (idDelivery, idDOrders, idDOrdersClient),
	constraint fk_delivery_orders foreign key (idDOrders) references orders(idOrders),
	constraint fk_delivery_orders_client foreign key (idDOrdersClient) references clients(idClient)
);
-- show databases;
-- use information_schema;
-- show tables;
-- select * from clients;
